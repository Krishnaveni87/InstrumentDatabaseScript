
@model InstrumentDatabase.Model.AreaModel

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Generating Eq Tag</title>
    <!-- Tell the browser to be responsive to screen width -->
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Font Awesome -->
    <link rel="stylesheet" href="../../plugins/fontawesome-free/css/all.min.css">
    <!-- Ionicons -->
    <link rel="stylesheet" href="https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css">
    <!-- DataTables -->
    <link rel="stylesheet" href="../../plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
    <link rel="stylesheet" href="../../plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
    <!-- Theme style -->
    <link rel="stylesheet" href="../../dist/css/adminlte.min.css">
    <!-- Google Font: Source Sans Pro -->
    <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700" rel="stylesheet">

    <script type="text/javascript">

        function DropDownAreaList() {

            var DropDownSelectedValue = $("#ddlArea :selected").val();

            //You can check selected value using alert

            //alert(DropDownSelectedValue);

            if (DropDownSelectedValue != null) {

                //Make a ajax call to controller here

                $.ajax({

                    Url: " /Home/DropDownAreaList ",

                    data: { "ID": DropDownSelectedValue },

                    success: function (response) {

                    },

                    error: function (xhr) {

                        alert("Something went wrong, please try again");

                    }

                });

            }

        }

    </script>

</head>
<body style="background-color:#a8e2ff">


    <!-- Content Wrapper. Contains page content -->
    <div class="wrapper">
        <!-- Content Header (Page header) -->
        <section class="content-header">
            <div class="container-fluid">
                <div class="row mb-2">
                    <div class="col-sm-6">
                        <img class="imgstyle" src="~/Images/pgsvg.svg" alt="" style="width:10%" />
                    </div>
                    <div class="col-sm-6">
                        <ol class="breadcrumb float-sm-right">
                            <li class="breadcrumb-item"><a href="../Home/Equipment">Home</a></li>
                            <li class="breadcrumb-item active">Equipment Tag</li>
                        </ol>
                    </div>
                </div>
            </div><!-- /.container-fluid -->

        </section>

        <!-- Main content -->
        <section class="content">
            <div class="container-fluid">
                <!-- SELECT2 EXAMPLE -->
                <div class="card card-default">
                    <div class="card-header">
                        <h3 class="card-title">Generate Equipment Tag</h3>

                        <div class="card-tools">
                            <button type="button" class="btn btn-tool" data-card-widget="collapse"><i class="fas fa-minus"></i></button>
                            @*<button type="button" class="btn btn-tool" data-card-widget="remove"><i class="fas fa-times"></i></button>*@
                        </div>
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body" style="background-color: #4088ac">
                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.Label("Area:", htmlAttributes: new { @class = "control-label col-md-2" })
                                    @*ViewBag.AreaList is holding all the Area values*@
                                    @Html.DropDownListFor(model => model.Areas, (IEnumerable<SelectListItem>) ViewBag.areas, new { @class = "form-control", @onchange = "DropDownAreaList()" })
                                    @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
                                </div>

                                <div class="form -group">
                                    @Html.Label("Equipment Name:", htmlAttributes: new { @class = "control-label col-md-2" })
                                    @Html.EditorFor(model => model.Eq_name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Eq_name, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.Label("Requestor:", htmlAttributes: new { @class = "control-label col-md-2" })
                                    @Html.EditorFor(model => model.Requestor, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Requestor, "", new { @class = "text-danger" })
                                </div>
                                <!-- /.form-group -->
                            </div>
                            <!-- /.col -->
                            <div class="col-md-4">

                                <div class="form-group">
                                    @Html.Label("Equipment Type:", htmlAttributes: new { @class = "control-label col-md-2" })
                                    @*ViewBag.Eq_Types is holding all the Equipment values*@
                                    @Html.DropDownListFor(model => model.Eq_Types, (IEnumerable<SelectListItem>) ViewBag.Eq_Types, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Eq_Type, "", new { @class = "text-danger" })
                                </div>
                                <!-- /.form-group -->
                                <div class="form-group">
                                    @Html.Label("P&ID No:", htmlAttributes: new { @class = "control-label col-md-2" })
                                    @Html.EditorFor(model => model.PIDNo, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PIDNo, "", new { @class = "text-danger" })
                                </div>
                                <!-- /.form-group -->
                                <div class="form-group">
                                    @Html.Label("Project Name:", htmlAttributes: new { @class = "control-label col-md-2" })
                                    @Html.EditorFor(model => model.Project_Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Project_Name, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <!-- /.col -->
                        <div class="col-md-4">
                            <div class="form-group">
                                @Html.Label("Sequence No:", htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.EditorFor(model => model.Seq_No, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.seq_no } })
                                @Html.ValidationMessageFor(model => model.Seq_No, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.Label("Area2:", htmlAttributes: new { @class = "control-label col-md-2" })
                                @*ViewBag.Area2List is holding all the Area2 values*@
                                @Html.DropDownListFor(model => model.Areas2, (IEnumerable<SelectListItem>)  ViewBag.Areas2 , new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Areas2, "", new { @class = "text-danger" })
                            </div>


                        </div>

                    </div>
                    <!-- /.row -->
                    <div class="form-group row-cols-2">
                        <input type="submit" value="Save" class="btn btn-default" />
                        <input type="submit" value="Cancel" class="btn btn-default" />

                    </div>

                </div>

            </div>
    </div><!-- /.container-fluid -->
   
    <!-- /.content -->
    
    <!-- /.content-wrapper -->
    <!-- Control Sidebar -->
    <!-- jQuery -->
    <script src="../../plugins/jquery/jquery.min.js"></script>
    <!-- Bootstrap 4 -->
    <script src="../../plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
    <!-- DataTables -->
    <script src="../../plugins/datatables/jquery.dataTables.min.js"></script>
    <script src="../../plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
    <script src="../../plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
    <script src="../../plugins/datatables-responsive/js/responsive.bootstrap4.min.js"></script>
    <!-- AdminLTE App -->
    <script src="../../dist/js/adminlte.min.js"></script>
    <!-- AdminLTE for demo purposes -->
    <script src="../../dist/js/demo.js"></script>
    <!-- page script -->

</body>
</html>


